name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version detection
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv pip install -e '.[all,dev,test]'
    
    - name: Run linting
      run: |
        uv pip install ruff mypy
        uv run python -m ruff check src/twat_fs tests --output-format=github
        uv run python -m ruff format --check src/twat_fs tests
    
    - name: Run type checking
      run: |
        uv run python -m mypy src/twat_fs tests --install-types --non-interactive
      continue-on-error: true  # MyPy can be strict, don't fail CI
    
    - name: Run tests
      run: |
        uv run python -m pytest -v --cov=src/twat_fs --cov-report=xml --cov-report=term-missing tests/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install build dependencies
      run: uv pip install build twine
    
    - name: Build package
      run: uv run python -m build
    
    - name: Check package
      run: uv run python -m twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/